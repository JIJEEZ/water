{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport bg from \"../assets/bg.png\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PersonalScreen = function PersonalScreen(_ref) {\n  var route = _ref.route;\n  var navigation = useNavigation();\n  var handleButtonPress = function handleButtonPress(goalType) {\n    navigation.navigate('Weight', _objectSpread(_objectSpread({}, route.params), {}, {\n      sports: goalType\n    }));\n  };\n  var goBackToGoals = function goBackToGoals() {\n    navigation.navigate('Goals');\n  };\n  return _jsx(ImageBackground, {\n    source: bg,\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.overlay,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: goBackToGoals,\n        children: _jsx(Icon, {\n          name: \"arrow-back\",\n          style: styles.backButtonIcon\n        })\n      }), _jsx(Text, {\n        style: styles.questionText,\n        children: \"How often do you do sports?\"\n      }), _jsxs(View, {\n        style: styles.buttonContainer,\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.goalButton,\n          onPress: function onPress() {\n            return handleButtonPress('Rarely');\n          },\n          children: [_jsx(Text, {\n            style: styles.goalButtonLabel,\n            children: \"Rarely\"\n          }), _jsx(Text, {\n            style: styles.goalButtonLabel2,\n            children: \" 1 day\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.goalButton,\n          onPress: function onPress() {\n            return handleButtonPress('Normal');\n          },\n          children: [_jsx(Text, {\n            style: styles.goalButtonLabel,\n            children: \"Normal\"\n          }), _jsx(Text, {\n            style: styles.goalButtonLabel2,\n            children: \"2-3 days\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.goalButton,\n          onPress: function onPress() {\n            return handleButtonPress('Often');\n          },\n          children: [_jsx(Text, {\n            style: styles.goalButtonLabel,\n            children: \"Often\"\n          }), _jsx(Text, {\n            style: styles.goalButtonLabel2,\n            children: \"4-5 days\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.goalButton,\n          onPress: function onPress() {\n            return handleButtonPress('Always');\n          },\n          children: [_jsx(Text, {\n            style: styles.goalButtonLabel,\n            children: \"Always\"\n          }), _jsx(Text, {\n            style: styles.goalButtonLabel2,\n            children: \"Everyday\"\n          })]\n        })]\n      })]\n    })\n  });\n};\nexport default PersonalScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  backButton: {\n    position: 'absolute',\n    top: 30,\n    left: 20,\n    padding: 10,\n    zIndex: 1\n  },\n  backButtonIcon: {\n    fontSize: 24,\n    color: 'white'\n  },\n  questionText: {\n    fontSize: 20,\n    color: 'white',\n    marginBottom: 20\n  },\n  buttonContainer: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: 20\n  },\n  goalButton: {\n    backgroundColor: '#8BADD3',\n    height: 80,\n    width: 200,\n    borderRadius: 30,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 10\n  },\n  goalButtonLabel: {\n    fontSize: 16,\n    color: '#333',\n    textAlign: 'center'\n  },\n  goalButtonLabel2: {\n    fontSize: 11,\n    color: '#333',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","StyleSheet","View","Text","ImageBackground","TouchableOpacity","useNavigation","bg","Icon","jsx","_jsx","jsxs","_jsxs","PersonalScreen","_ref","route","navigation","handleButtonPress","goalType","navigate","_objectSpread","params","sports","goBackToGoals","source","style","styles","container","children","overlay","backButton","onPress","name","backButtonIcon","questionText","buttonContainer","goalButton","goalButtonLabel","goalButtonLabel2","create","flex","backgroundColor","justifyContent","alignItems","position","top","left","padding","zIndex","fontSize","color","marginBottom","flexDirection","marginTop","height","width","borderRadius","marginVertical","textAlign"],"sources":["/Users/jio/Desktop/New Water (No data fetch in history)/screens/PersonalScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, Text, ImageBackground, TouchableOpacity } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\n//assets\r\nimport bg from '../assets/bg.png';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\n\r\nconst PersonalScreen = ({ route }) => {\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const handleButtonPress = (goalType) => {\r\n        // Navigate to PersonalGoalsWeight screen with the selected goal type\r\n        navigation.navigate('Weight', { ...route.params, sports: goalType });\r\n    };\r\n\r\n    const goBackToGoals = () => {\r\n        // back to goals screen\r\n        navigation.navigate('Goals');\r\n    };\r\n\r\n    return (\r\n        <ImageBackground\r\n            source={bg}\r\n            style={styles.container}\r\n        >\r\n            <View style={styles.overlay}>\r\n                <TouchableOpacity style={styles.backButton} onPress={goBackToGoals}>\r\n                    <Icon name=\"arrow-back\" style={styles.backButtonIcon} />\r\n                </TouchableOpacity>\r\n\r\n                <Text style={styles.questionText}>How often do you do sports?</Text>\r\n                <View style={styles.buttonContainer}>\r\n                    <TouchableOpacity\r\n                        style={styles.goalButton}\r\n                        onPress={() => handleButtonPress('Rarely')}\r\n                    >\r\n                        <Text style={styles.goalButtonLabel}>Rarely</Text>\r\n                        <Text style={styles.goalButtonLabel2}> 1 day</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity\r\n                        style={styles.goalButton}\r\n                        onPress={() => handleButtonPress('Normal')}\r\n                    >\r\n                        <Text style={styles.goalButtonLabel}>Normal</Text>\r\n                        <Text style={styles.goalButtonLabel2}>2-3 days</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity\r\n                        style={styles.goalButton}\r\n                        onPress={() => handleButtonPress('Often')}\r\n                    >\r\n                        <Text style={styles.goalButtonLabel}>Often</Text>\r\n                        <Text style={styles.goalButtonLabel2}>4-5 days</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity\r\n                        style={styles.goalButton}\r\n                        onPress={() => handleButtonPress('Always')}\r\n                    >\r\n                        <Text style={styles.goalButtonLabel}>Always</Text>\r\n                        <Text style={styles.goalButtonLabel2}>Everyday</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </ImageBackground>\r\n    );\r\n};\r\n\r\nexport default PersonalScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    overlay: {\r\n        flex: 1,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.4)',\r\n        justifyContent: 'center', // Center the content vertically\r\n        alignItems: 'center', // Center the content horizontally\r\n    },\r\n\r\n    backButton: {\r\n        position: 'absolute',\r\n        top: 30,\r\n        left: 20,\r\n        padding: 10,\r\n        zIndex: 1,\r\n    },\r\n\r\n    backButtonIcon: {\r\n        fontSize: 24,\r\n        color: 'white',\r\n    },\r\n\r\n    questionText: {\r\n        fontSize: 20,\r\n        color: 'white',\r\n        marginBottom: 20,\r\n    },\r\n\r\n    buttonContainer: {\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginTop: 20,\r\n    },\r\n\r\n    goalButton: {\r\n        backgroundColor: '#8BADD3',\r\n        height: 80,\r\n        width: 200,\r\n        borderRadius: 30,\r\n        alignItems: 'center',\r\n        justifyContent: 'center', // Center the text vertically\r\n        marginVertical: 10,\r\n    },\r\n\r\n    goalButtonLabel: {\r\n        fontSize: 16,\r\n        color: '#333',\r\n        textAlign: 'center', // Center the text horizontally\r\n    },\r\n\r\n    goalButtonLabel2: {\r\n        fontSize: 11,\r\n        color: '#333',\r\n        textAlign: 'center', // Center the text horizontally\r\n    },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}