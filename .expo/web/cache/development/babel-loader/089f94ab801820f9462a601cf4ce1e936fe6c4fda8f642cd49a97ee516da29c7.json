{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport logodrink from \"../assets/logotrans.png\";\nimport bg from \"../assets/bg.png\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n;\nvar PersonalDailyScreen = function PersonalDailyScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    dailyGoal = _useState2[0],\n    setDailyGoal = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    calculatedGoal = _useState4[0],\n    setCalculatedGoal = _useState4[1];\n  var calculateDailyGoal = function calculateDailyGoal(weight, age, playFrequency) {\n    var baseWaterIntakeRate = Math.floor(Math.random() * (35 - 30 + 1)) + 30;\n    var baseWaterIntake = weight * baseWaterIntakeRate;\n    var activityLevelAdjustment;\n    switch (playFrequency) {\n      case 'Rarely':\n        activityLevelAdjustment = 0.8;\n        break;\n      case 'Normal':\n        activityLevelAdjustment = 1.0;\n        break;\n      case 'Often':\n        activityLevelAdjustment = 1.2;\n        break;\n      case 'Always':\n        activityLevelAdjustment = 1.5;\n        break;\n      default:\n        activityLevelAdjustment = 1.0;\n    }\n    var totalDailyWaterIntake = baseWaterIntake * activityLevelAdjustment;\n    var totalDailyWaterIntakeLiters = (totalDailyWaterIntake / 1000).toFixed(3);\n    setCalculatedGoal(totalDailyWaterIntakeLiters);\n    return totalDailyWaterIntakeLiters;\n  };\n  useEffect(function () {\n    var _route$params = route.params,\n      weight = _route$params.weight,\n      age = _route$params.age,\n      sports = _route$params.sports;\n    var calculatedGoal = calculateDailyGoal(weight, age, sports);\n    setDailyGoal(calculatedGoal);\n  }, [route.params]);\n  var handleFinish = function handleFinish() {\n    var dailyGoalInMilliliters = Math.round(calculatedGoal * 1000);\n    navigation.navigate('Dashboard', {\n      customGoal: dailyGoalInMilliliters\n    });\n  };\n  var goBackToPersonalAge = function goBackToPersonalAge() {\n    navigation.navigate('Age');\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ImageBackground, {\n      source: bg,\n      style: styles.backgroundImage,\n      children: _jsxs(View, {\n        style: styles.overlay,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.backButton,\n          onPress: goBackToPersonalAge,\n          children: _jsx(MaterialIcons, {\n            name: \"arrow-back\",\n            style: styles.backButtonIcon\n          })\n        }), _jsxs(View, {\n          style: styles.appContainer,\n          children: [_jsx(Image, {\n            source: logodrink,\n            style: styles.logo\n          }), _jsxs(Text, {\n            style: styles.headerMotto2,\n            children: [\"Your Daily Goal is \", dailyGoal, \" L\"]\n          }), _jsx(TouchableOpacity, {\n            style: styles.addButton,\n            onPress: handleFinish,\n            children: _jsx(Text, {\n              style: styles.addButtonLabel,\n              children: \"Finish\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n};\nexport default PersonalDailyScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.4)'\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover'\n  },\n  backButton: {\n    position: 'absolute',\n    top: 30,\n    left: 20,\n    padding: 10,\n    zIndex: 1\n  },\n  backButtonIcon: {\n    fontSize: 24,\n    color: 'white'\n  },\n  appContainer: {\n    flex: 1,\n    paddingTop: 50,\n    paddingBottom: 50,\n    paddingHorizontal: 16,\n    alignItems: 'center'\n  },\n  logo: {\n    height: 170,\n    width: 170,\n    top: 120,\n    alignItems: 'center'\n  },\n  headerMotto2: {\n    fontSize: 26,\n    fontWeight: 'bold',\n    color: \"white\",\n    top: 140\n  },\n  addButton: {\n    backgroundColor: '#8BADD3',\n    paddingVertical: 23,\n    paddingHorizontal: 70,\n    borderRadius: 10,\n    top: 200,\n    alignItems: 'center'\n  },\n  addButtonLabel: {\n    fontSize: 23,\n    color: '#333'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Text","Image","ImageBackground","TouchableOpacity","logodrink","bg","MaterialIcons","jsx","_jsx","jsxs","_jsxs","PersonalDailyScreen","_ref","route","navigation","_useState","_useState2","_slicedToArray","dailyGoal","setDailyGoal","_useState3","_useState4","calculatedGoal","setCalculatedGoal","calculateDailyGoal","weight","age","playFrequency","baseWaterIntakeRate","Math","floor","random","baseWaterIntake","activityLevelAdjustment","totalDailyWaterIntake","totalDailyWaterIntakeLiters","toFixed","_route$params","params","sports","handleFinish","dailyGoalInMilliliters","round","navigate","customGoal","goBackToPersonalAge","style","styles","container","children","source","backgroundImage","overlay","backButton","onPress","name","backButtonIcon","appContainer","logo","headerMotto2","addButton","addButtonLabel","create","flex","backgroundColor","resizeMode","position","top","left","padding","zIndex","fontSize","color","paddingTop","paddingBottom","paddingHorizontal","alignItems","height","width","fontWeight","paddingVertical","borderRadius"],"sources":["/Users/jio/Desktop/New Water (No data fetch in history)/screens/PersonalDailyScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, View, Text, Image, ImageBackground, TouchableOpacity } from 'react-native';\r\n\r\n// assets\r\nimport logodrink from '../assets/logotrans.png';\r\nimport bg from '../assets/bg.png';\r\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';;\r\n\r\nconst PersonalDailyScreen = ({ route, navigation }) => {\r\n    const [dailyGoal, setDailyGoal] = useState(0); // Initialize default value\r\n    const [calculatedGoal, setCalculatedGoal] = useState(0); // Store the calculated goal\r\n\r\n\r\n    // calculate the total daily water intake\r\n    const calculateDailyGoal = (weight, age, playFrequency) => {\r\n        // Base Water Intake Rate (ml/kg)\r\n        const baseWaterIntakeRate = Math.floor(Math.random() * (35 - 30 + 1)) + 30;\r\n\r\n        // Base Water Intake\r\n        const baseWaterIntake = weight * baseWaterIntakeRate;\r\n\r\n        // Activity Level Adjustment\r\n        let activityLevelAdjustment;\r\n        switch (playFrequency) {\r\n            case 'Rarely':\r\n                activityLevelAdjustment = 0.8;\r\n                break;\r\n            case 'Normal':\r\n                activityLevelAdjustment = 1.0;\r\n                break;\r\n            case 'Often':\r\n                activityLevelAdjustment = 1.2;\r\n                break;\r\n            case 'Always':\r\n                activityLevelAdjustment = 1.5;\r\n                break;\r\n            default:\r\n                activityLevelAdjustment = 1.0;\r\n        }\r\n\r\n        // Total Daily Water Intake in milliliters\r\n        const totalDailyWaterIntake = baseWaterIntake * activityLevelAdjustment;\r\n\r\n        // Convert milliliters to liters and round to 3 decimal places\r\n        const totalDailyWaterIntakeLiters = (totalDailyWaterIntake / 1000).toFixed(3);\r\n\r\n        // Store the calculated goal in the state\r\n        setCalculatedGoal(totalDailyWaterIntakeLiters);\r\n\r\n        return totalDailyWaterIntakeLiters;\r\n    };\r\n\r\n    //  calculate the daily goal \r\n    useEffect(() => {\r\n        // get info route.params and calculate the daily goal\r\n        const { weight, age, sports } = route.params;\r\n        // \r\n        const calculatedGoal = calculateDailyGoal(weight, age, sports);\r\n        setDailyGoal(calculatedGoal);\r\n    }, [route.params]); // recalculation when user information changes\r\n\r\n    const handleFinish = () => {\r\n        // Convert daily goal from liters to milliliters\r\n        const dailyGoalInMilliliters = Math.round(calculatedGoal * 1000);\r\n\r\n        // Navigate to the Dashboard screen \r\n        navigation.navigate('Dashboard', { customGoal: dailyGoalInMilliliters });\r\n    };\r\n\r\n    const goBackToPersonalAge = () => {\r\n        // Navigate back to the PersonalAge screen\r\n        navigation.navigate('Age');\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <ImageBackground source={bg} style={styles.backgroundImage}>\r\n                <View style={styles.overlay}>\r\n                    <TouchableOpacity style={styles.backButton} onPress={goBackToPersonalAge}>\r\n                        <MaterialIcons name=\"arrow-back\" style={styles.backButtonIcon} />\r\n                    </TouchableOpacity>\r\n                    <View style={styles.appContainer}>\r\n                        <Image source={logodrink} style={styles.logo} />\r\n                        <Text style={styles.headerMotto2}>Your Daily Goal is {dailyGoal} L</Text>\r\n                        <TouchableOpacity\r\n                            style={styles.addButton}\r\n                            onPress={handleFinish}\r\n                        >\r\n                            <Text style={styles.addButtonLabel}>Finish</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </ImageBackground>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default PersonalDailyScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n\r\n    overlay: {\r\n        flex: 1,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.4)',\r\n    },\r\n\r\n    backgroundImage: {\r\n        flex: 1,\r\n        resizeMode: 'cover',\r\n    },\r\n\r\n    backButton: {\r\n        position: 'absolute',\r\n        top: 30,\r\n        left: 20,\r\n        padding: 10,\r\n        zIndex: 1,\r\n    },\r\n\r\n    backButtonIcon: {\r\n        fontSize: 24,\r\n        color: 'white',\r\n    },\r\n\r\n    appContainer: {\r\n        flex: 1,\r\n        paddingTop: 50,\r\n        paddingBottom: 50,\r\n        paddingHorizontal: 16,\r\n        alignItems: 'center',\r\n    },\r\n\r\n    logo: {\r\n        height: 170, // size nung logo\r\n        width: 170, // size nung loge\r\n        top: 120,\r\n        alignItems: 'center',\r\n    },\r\n\r\n    headerMotto2: {\r\n        fontSize: 26,\r\n        fontWeight: 'bold',\r\n        color: \"white\",\r\n        top: 140,\r\n    },\r\n\r\n    addButton: {\r\n        backgroundColor: '#8BADD3',\r\n        paddingVertical: 23,\r\n        paddingHorizontal: 70,\r\n        borderRadius: 10,\r\n        top: 200,\r\n        alignItems: 'center',\r\n    },\r\n\r\n    addButtonLabel: {\r\n        fontSize: 23,\r\n        color: '#333',\r\n    },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}