{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Picker } from '@react-native-picker/picker';\nimport { doc, setDoc } from 'firebase/firestore';\nimport { db } from \"../config\";\nimport bg from \"../assets/bg.png\";\nimport bottle from \"../assets/bottle.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DashboardScreen = function DashboardScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var selectedBottleSize = route.params ? route.params.selectedBottleSize : '1 L';\n  var username = route.params ? route.params.username : null;\n  console.log('This is dashscreen ' + username);\n  var dailyGoals = {\n    '1 L': 1000,\n    '1.5 L': 1500,\n    '2 L': 2000,\n    '2.5 L': 2500,\n    '3 L': 3000,\n    'Custom': 0\n  };\n  var customGoal = route.params ? route.params.customGoal : null;\n  var dailyGoal = customGoal ? parseFloat(customGoal, 10) : dailyGoals[selectedBottleSize];\n  var increment = 250;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    consumedWater = _useState2[0],\n    setConsumedWater = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    message = _useState4[0],\n    setMessage = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    consumptionHistory = _useState6[0],\n    setConsumptionHistory = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    meterFill = _useState8[0],\n    setMeterFill = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isHeaderModalVisible = _useState10[0],\n    setHeaderModalVisible = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isModalVisible = _useState12[0],\n    setModalVisible = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    reminderTime = _useState14[0],\n    setReminderTime = _useState14[1];\n  var options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    showTimePicker = _useState16[0],\n    setShowTimePicker = _useState16[1];\n  var saveWaterConsumption = function () {\n    var _ref2 = _asyncToGenerator(function* (username, consumedWater, dailyGoal, reachedGoal, time) {\n      try {\n        var currentDate = new Date().toDateString();\n        var userDocRef = doc(db, 'users', username);\n        var waterConsumptionRef = doc(userDocRef, 'waterConsumption', currentDate);\n        yield setDoc(waterConsumptionRef, {\n          consumedWater: consumedWater,\n          dailyGoal: dailyGoal,\n          reachedGoal: reachedGoal,\n          time: time\n        });\n        console.log('Water consumption data saved successfully!');\n      } catch (error) {\n        console.error('Error saving: ', error);\n      }\n    });\n    return function saveWaterConsumption(_x, _x2, _x3, _x4, _x5) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var addWater = function addWater() {\n    var newConsumedWater = consumedWater + increment;\n    setConsumedWater(newConsumedWater);\n    var fillPercentage = newConsumedWater / dailyGoal * 100;\n    setMeterFill(fillPercentage);\n    if (newConsumedWater >= dailyGoal) {\n      setMessage(\"You've reached your daily goal!\");\n    }\n    var time = new Date().toLocaleTimeString();\n    var newRecord = `${time} +${increment} ml`;\n    setConsumptionHistory([newRecord].concat(_toConsumableArray(consumptionHistory)));\n    saveWaterConsumption(username, newConsumedWater, dailyGoal, newConsumedWater >= dailyGoal, time);\n  };\n  var toggleHeaderModal = function toggleHeaderModal() {\n    setHeaderModalVisible(!isHeaderModalVisible);\n  };\n  var closeHeaderModal = function closeHeaderModal() {\n    setHeaderModalVisible(false);\n  };\n  var setReminder = function setReminder() {\n    setModalVisible(true);\n  };\n  var handleTimePicker = function handleTimePicker() {\n    setShowTimePicker(true);\n  };\n  var handleTimeChange = function handleTimeChange(event, selectedTime) {\n    if (selectedTime) {\n      var formattedTime = `${selectedTime.getHours()}:${selectedTime.getMinutes()}`;\n      setReminderTime(formattedTime);\n    }\n    setShowTimePicker(false);\n  };\n  var closeModal = function closeModal() {\n    setModalVisible(false);\n  };\n  var toggleModal = function toggleModal() {\n    setModalVisible(!isModalVisible);\n  };\n  var closeSlideInModal = function closeSlideInModal() {\n    setModalVisible(false);\n  };\n  var navigateToDashboard = function navigateToDashboard() {\n    closeHeaderModal();\n    setModalVisible(false);\n    navigation.navigate('TabScreens', {\n      screen: 'Dashboard'\n    });\n  };\n  var navigateToHistory = function navigateToHistory() {\n    closeHeaderModal();\n    setModalVisible(false);\n    navigation.navigate('History');\n  };\n  var navigateToSettings = function navigateToSettings() {\n    closeHeaderModal();\n    setModalVisible(false);\n    navigation.navigate('Settings');\n  };\n  var navigateToGoals = function navigateToGoals() {\n    closeHeaderModal();\n    setModalVisible(false);\n    navigation.navigate('Goals');\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ImageBackground, {\n      source: bg,\n      style: styles.backgroundImage,\n      children: _jsxs(View, {\n        style: styles.overlay,\n        children: [_jsx(View, {\n          style: styles.appContainer,\n          children: _jsx(View, {\n            style: styles.headerContainer\n          })\n        }), _jsx(Text, {\n          style: styles.header,\n          children: \"Quench Your Thws\"\n        }), _jsx(View, {\n          style: styles.meterContainer,\n          children: _jsx(View, {\n            style: styles.meter,\n            children: _jsx(View, {\n              style: [styles.fill, {\n                height: `${meterFill}%`\n              }]\n            })\n          })\n        }), _jsxs(Text, {\n          style: styles.consumedText,\n          children: [consumedWater, \" ml\"]\n        }), _jsxs(Text, {\n          style: styles.goalText,\n          children: [\"Goal: \", dailyGoal, \" ml\"]\n        }), _jsx(TouchableOpacity, {\n          onPress: addWater,\n          children: _jsx(Image, {\n            source: bottle,\n            style: styles.touchableWaterBottle\n          })\n        }), message && _jsx(Text, {\n          style: styles.messageText,\n          children: message\n        }), _jsxs(ScrollView, {\n          style: styles.historyContainer,\n          children: [_jsx(View, {\n            style: styles.historyRecord,\n            children: _jsx(Text, {\n              style: styles.historyDate,\n              children: new Date().toLocaleDateString(undefined, options)\n            })\n          }), consumptionHistory.map(function (record, index) {\n            return _jsx(View, {\n              style: styles.historyRecord,\n              children: _jsx(Text, {\n                style: styles.historyText,\n                children: record\n              })\n            }, index);\n          })]\n        }), _jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: setReminder,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Set Reminder\"\n            })\n          })\n        }), _jsx(Modal, {\n          transparent: true,\n          visible: isHeaderModalVisible,\n          onBackdropPress: closeSlideInModal,\n          animationIn: \"slideInLeft\",\n          animationOut: \"slideOutLeft\",\n          onRequestClose: toggleModal,\n          children: _jsxs(View, {\n            style: styles.modalContainer1,\n            children: [_jsx(Text, {\n              style: styles.welcomeText,\n              children: \"Welcome\"\n            }), _jsx(TouchableOpacity, {\n              onPress: navigateToDashboard,\n              children: _jsx(Text, {\n                style: styles.modalText2,\n                children: \"Dashboard\"\n              })\n            }), _jsx(TouchableOpacity, {\n              onPress: navigateToHistory,\n              children: _jsx(Text, {\n                style: styles.modalText2,\n                children: \"History\"\n              })\n            }), _jsx(TouchableOpacity, {\n              onPress: navigateToSettings,\n              children: _jsx(Text, {\n                style: styles.modalText2,\n                children: \"Settings\"\n              })\n            })]\n          })\n        }), _jsx(Modal, {\n          visible: isModalVisible,\n          animationType: \"slide\",\n          transparent: true,\n          children: _jsx(View, {\n            style: styles.modalContainer,\n            children: _jsxs(View, {\n              style: styles.modalContent,\n              children: [_jsx(Text, {\n                style: styles.modalText3,\n                children: \"Set Reminder Time\"\n              }), _jsx(View, {\n                style: styles.pickerContainer,\n                children: _jsxs(Picker, {\n                  selectedValue: reminderTime,\n                  onValueChange: function onValueChange(itemValue) {\n                    return setReminderTime(itemValue);\n                  },\n                  style: styles.picker,\n                  children: [_jsx(Picker.Item, {\n                    label: \"Select Time\",\n                    value: \"\"\n                  }), _jsx(Picker.Item, {\n                    label: \"12:00 AM\",\n                    value: \"0:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"1:00 AM\",\n                    value: \"1:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"2:00 AM\",\n                    value: \"2:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"3:00 AM\",\n                    value: \"3:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"4:00 AM\",\n                    value: \"4:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"5:00 AM\",\n                    value: \"5:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"6:00 AM\",\n                    value: \"6:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"7:00 AM\",\n                    value: \"7:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"8:00 AM\",\n                    value: \"8:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"9:00 AM\",\n                    value: \"9:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"10:00 AM\",\n                    value: \"10:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"11:00 AM\",\n                    value: \"11:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"12:00 PM\",\n                    value: \"12:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"1:00 PM\",\n                    value: \"13:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"2:00 PM\",\n                    value: \"14:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"3:00 PM\",\n                    value: \"15:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"4:00 PM\",\n                    value: \"16:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"5:00 PM\",\n                    value: \"17:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"6:00 PM\",\n                    value: \"18:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"7:00 PM\",\n                    value: \"19:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"8:00 PM\",\n                    value: \"20:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"9:00 PM\",\n                    value: \"21:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"10:00 PM\",\n                    value: \"22:00\"\n                  }), _jsx(Picker.Item, {\n                    label: \"11:00 PM\",\n                    value: \"23:00\"\n                  })]\n                })\n              }), _jsx(TouchableOpacity, {\n                style: styles.closeButton,\n                onPress: closeModal,\n                children: _jsx(Text, {\n                  style: styles.closeButtonText,\n                  children: \"Close\"\n                })\n              })]\n            })\n          })\n        })]\n      })\n    })\n  });\n};\nexport default DashboardScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\n    resizeMode: 'cover'\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover'\n  },\n  appContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    color: 'white',\n    left: -165,\n    top: 40,\n    marginTop: 20,\n    paddingHorizontal: 10\n  },\n  header: {\n    fontSize: 20,\n    marginBottom: 10,\n    textAlign: 'center',\n    color: 'white'\n  },\n  meterContainer: {\n    height: 300,\n    width: 300,\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignSelf: 'center'\n  },\n  meter: {\n    width: 200,\n    height: 200,\n    backgroundColor: 'lightgray',\n    borderRadius: 100,\n    overflow: 'hidden'\n  },\n  fill: {\n    width: '100%',\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 0\n  },\n  consumedText: {\n    fontSize: 18,\n    marginTop: 10,\n    color: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignSelf: 'center'\n  },\n  goalText: {\n    fontSize: 16,\n    marginTop: 10,\n    color: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignSelf: 'center'\n  },\n  touchableWaterBottle: {\n    width: 40,\n    height: 100,\n    marginTop: 20,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  messageText: {\n    fontSize: 18,\n    color: 'green',\n    marginTop: 10,\n    alignSelf: 'center'\n  },\n  historyContainer: {\n    maxHeight: 200,\n    width: 230,\n    marginTop: 20,\n    borderWidth: 1,\n    padding: 20,\n    backgroundColor: 'rgba(255, 255, 255, 0.7)',\n    borderRadius: 10,\n    alignSelf: 'center'\n  },\n  historyRecord: {\n    marginBottom: 10,\n    color: 'white'\n  },\n  historyDate: {\n    fontSize: 16,\n    color: 'white',\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  historyText: {\n    fontSize: 16,\n    color: 'white'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n    alignSelf: 'center'\n  },\n  button: {\n    flex: 1,\n    backgroundColor: '#8BADD3',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 5\n  },\n  welcomeText: {\n    color: 'white',\n    fontSize: 30\n  },\n  modalText2: {\n    color: 'white',\n    fontSize: 18,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    color: '#333',\n    fontSize: 18\n  },\n  modalContainer1: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'left',\n    backgroundColor: 'rgba(0, 0, 0, 0.7)'\n  },\n  modalText: {\n    fontSize: 24,\n    color: 'white',\n    marginBottom: 20\n  },\n  button: {\n    backgroundColor: '#8BADD3',\n    padding: 10,\n    borderRadius: 5,\n    margin: 10,\n    alignItems: 'center',\n    borderRadius: 5,\n    alignSelf: 'center'\n  },\n  buttonText: {\n    color: '#333',\n    fontSize: 20,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 10,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    fontSize: 50\n  },\n  modalText3: {\n    fontSize: 20,\n    color: 'black',\n    marginBottom: 20,\n    fontWeight: 'bold'\n  },\n  modalContent: {\n    backgroundColor: '#8BADD3',\n    padding: 60,\n    borderRadius: 10,\n    alignItems: 'center',\n    fontSize: 50\n  },\n  pickerContainer: {\n    marginTop: 20,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    borderWidth: 1,\n    paddingHorizontal: 10,\n    alignSelf: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white'\n  },\n  picker: {\n    height: 40,\n    width: '100%',\n    fontSize: 16,\n    alignSelf: 'center',\n    alignItems: 'center'\n  },\n  closeButton: {\n    marginTop: 20\n  },\n  closeButtonText: {\n    color: 'red',\n    fontSize: 20\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingHorizontal: 10,\n    width: '80%'\n  },\n  backButton: {\n    position: 'absolute',\n    top: 10,\n    right: 10\n  },\n  backButtonText: {\n    color: 'white',\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","Image","TouchableOpacity","ScrollView","ImageBackground","StyleSheet","Modal","TextInput","Picker","doc","setDoc","db","bg","bottle","jsx","_jsx","jsxs","_jsxs","DashboardScreen","_ref","navigation","route","selectedBottleSize","params","username","console","log","dailyGoals","customGoal","dailyGoal","parseFloat","increment","_useState","_useState2","_slicedToArray","consumedWater","setConsumedWater","_useState3","_useState4","message","setMessage","_useState5","_useState6","consumptionHistory","setConsumptionHistory","_useState7","_useState8","meterFill","setMeterFill","_useState9","_useState10","isHeaderModalVisible","setHeaderModalVisible","_useState11","_useState12","isModalVisible","setModalVisible","_useState13","_useState14","reminderTime","setReminderTime","options","year","month","day","_useState15","_useState16","showTimePicker","setShowTimePicker","saveWaterConsumption","_ref2","_asyncToGenerator","reachedGoal","time","currentDate","Date","toDateString","userDocRef","waterConsumptionRef","error","_x","_x2","_x3","_x4","_x5","apply","arguments","addWater","newConsumedWater","fillPercentage","toLocaleTimeString","newRecord","concat","_toConsumableArray","toggleHeaderModal","closeHeaderModal","setReminder","handleTimePicker","handleTimeChange","event","selectedTime","formattedTime","getHours","getMinutes","closeModal","toggleModal","closeSlideInModal","navigateToDashboard","navigate","screen","navigateToHistory","navigateToSettings","navigateToGoals","style","styles","container","children","source","backgroundImage","overlay","appContainer","headerContainer","header","meterContainer","meter","fill","height","consumedText","goalText","onPress","touchableWaterBottle","messageText","historyContainer","historyRecord","historyDate","toLocaleDateString","undefined","map","record","index","historyText","buttonContainer","button","buttonText","transparent","visible","onBackdropPress","animationIn","animationOut","onRequestClose","modalContainer1","welcomeText","modalText2","animationType","modalContainer","modalContent","modalText3","pickerContainer","selectedValue","onValueChange","itemValue","picker","Item","label","value","closeButton","closeButtonText","create","flex","backgroundColor","resizeMode","alignItems","justifyContent","flexDirection","color","left","top","marginTop","paddingHorizontal","fontSize","marginBottom","textAlign","width","alignSelf","borderRadius","overflow","position","bottom","maxHeight","borderWidth","padding","fontWeight","margin","modalText","borderColor","input","backButton","right","backButtonText"],"sources":["/Users/jio/Desktop/New Water (No data fetch in history)/screens/DashboardScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, Image, TouchableOpacity, ScrollView, ImageBackground, StyleSheet, Modal, TextInput } from 'react-native';\r\nimport { Picker } from '@react-native-picker/picker';\r\n\r\nimport { doc, setDoc } from 'firebase/firestore';\r\nimport { db } from '../config';\r\n\r\n//assets\r\nimport bg from '../assets/bg.png';\r\nimport bottle from '../assets/bottle.png';\r\n\r\nconst DashboardScreen = ({ navigation, route }) => {\r\n\r\n    // Get the selected bottle size from the navigation parameters\r\n    const selectedBottleSize = route.params ? route.params.selectedBottleSize : '1 L';\r\n    const username = route.params ? route.params.username : null;\r\n    console.log('This is dashscreen ' + username)\r\n\r\n    // Goals.js - define daily goals based on selected bottle\r\n    const dailyGoals = {\r\n        '1 L': 1000,\r\n        '1.5 L': 1500,\r\n        '2 L': 2000,\r\n        '2.5 L': 2500,\r\n        '3 L': 3000,\r\n        'Custom': 0,\r\n    };\r\n\r\n\r\n    // Use the custom goal if available, otherwise use the default\r\n    const customGoal = route.params ? route.params.customGoal : null;\r\n    const dailyGoal = customGoal ? parseFloat(customGoal, 10) : dailyGoals[selectedBottleSize];\r\n\r\n    const increment = 250;\r\n    const [consumedWater, setConsumedWater] = useState(0);\r\n    const [message, setMessage] = useState(null);\r\n    const [consumptionHistory, setConsumptionHistory] = useState([]);\r\n    const [meterFill, setMeterFill] = useState(0);\r\n    const [isHeaderModalVisible, setHeaderModalVisible] = useState(false);\r\n    const [isModalVisible, setModalVisible] = useState(false);\r\n    const [reminderTime, setReminderTime] = useState('');\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    const [showTimePicker, setShowTimePicker] = useState(false);\r\n\r\n    const saveWaterConsumption = async (username, consumedWater, dailyGoal, reachedGoal, time) => {\r\n        try {\r\n            const currentDate = new Date().toDateString();\r\n\r\n            // Reference the user document and the water consumption subcollection\r\n            const userDocRef = doc(db, 'users', username);\r\n            const waterConsumptionRef = doc(userDocRef, 'waterConsumption', currentDate);\r\n\r\n            // Save the water consumption data\r\n            await setDoc(waterConsumptionRef, {\r\n                consumedWater: consumedWater,\r\n                dailyGoal: dailyGoal,\r\n                reachedGoal: reachedGoal,\r\n                time: time,\r\n            });\r\n\r\n            console.log('Water consumption data saved successfully!');\r\n        } catch (error) {\r\n            console.error('Error saving: ', error);\r\n        }\r\n    };\r\n\r\n    const addWater = () => {\r\n        const newConsumedWater = consumedWater + increment;\r\n        setConsumedWater(newConsumedWater);\r\n\r\n        const fillPercentage = (newConsumedWater / dailyGoal) * 100;\r\n        setMeterFill(fillPercentage);\r\n\r\n        if (newConsumedWater >= dailyGoal) {\r\n            setMessage(\"You've reached your daily goal!\");\r\n        }\r\n\r\n        // Add a new record to the consumption history\r\n        const time = new Date().toLocaleTimeString();\r\n        const newRecord = `${time} +${increment} ml`;\r\n        setConsumptionHistory([newRecord, ...consumptionHistory]);\r\n\r\n        // Save water consumption at each addition\r\n        saveWaterConsumption(username, newConsumedWater, dailyGoal, newConsumedWater >= dailyGoal, time);\r\n    };\r\n\r\n\r\n\r\n    const toggleHeaderModal = () => {\r\n        setHeaderModalVisible(!isHeaderModalVisible);\r\n    };\r\n\r\n    const closeHeaderModal = () => {\r\n        setHeaderModalVisible(false);\r\n    };\r\n\r\n    const setReminder = () => {\r\n        // Set Reminder\r\n        setModalVisible(true);\r\n    };\r\n    const handleTimePicker = () => {\r\n        setShowTimePicker(true);\r\n    };\r\n    const handleTimeChange = (event, selectedTime) => {\r\n        if (selectedTime) {\r\n            const formattedTime = `${selectedTime.getHours()}:${selectedTime.getMinutes()}`;\r\n            setReminderTime(formattedTime);\r\n        }\r\n\r\n        setShowTimePicker(false);\r\n    };\r\n    const closeModal = () => {\r\n        setModalVisible(false);\r\n    };\r\n\r\n    const toggleModal = () => {\r\n        setModalVisible(!isModalVisible);\r\n    };\r\n\r\n    const closeSlideInModal = () => {\r\n        setModalVisible(false);\r\n    };\r\n\r\n    // Navigate to Dashboard \r\n    const navigateToDashboard = () => {\r\n        closeHeaderModal();\r\n        setModalVisible(false); // Close modal\r\n        navigation.navigate('TabScreens', { screen: 'Dashboard' });\r\n    };\r\n\r\n    // Navigate to History \r\n    const navigateToHistory = () => {\r\n        closeHeaderModal();\r\n        setModalVisible(false); // Close modal\r\n        navigation.navigate('History');\r\n    };\r\n\r\n    // Navigate to Settings\r\n    const navigateToSettings = () => {\r\n        closeHeaderModal();\r\n        setModalVisible(false); // Close modal\r\n        navigation.navigate('Settings');\r\n    };\r\n\r\n    const navigateToGoals = () => {\r\n        closeHeaderModal();\r\n        setModalVisible(false); // Close the modal\r\n        navigation.navigate('Goals'); // Navigate to the \"Goals\" screen\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <ImageBackground source={bg} style={styles.backgroundImage}>\r\n                <View style={styles.overlay}>\r\n                    <View style={styles.appContainer}>\r\n                        <View style={styles.headerContainer}>\r\n\r\n                        </View>\r\n                    </View>\r\n\r\n                    <Text style={styles.header}>Quench Your Thws</Text>\r\n                    <View style={styles.meterContainer}>\r\n                        <View style={styles.meter}>\r\n                            <View style={[styles.fill, { height: `${meterFill}%` }]} />\r\n                        </View>\r\n                    </View>\r\n                    <Text style={styles.consumedText}>{consumedWater} ml</Text>\r\n                    <Text style={styles.goalText}>Goal: {dailyGoal} ml</Text>\r\n                    <TouchableOpacity onPress={addWater}>\r\n                        <Image source={bottle} style={styles.touchableWaterBottle} />\r\n                    </TouchableOpacity>\r\n                    {message && <Text style={styles.messageText}>{message}</Text>}\r\n                    <ScrollView style={styles.historyContainer}>\r\n                        <View style={styles.historyRecord}>\r\n                            <Text style={styles.historyDate}>\r\n\r\n                                {new Date().toLocaleDateString(undefined, options)}\r\n                            </Text>\r\n                        </View>\r\n                        {consumptionHistory.map((record, index) => (\r\n                            <View key={index} style={styles.historyRecord}>\r\n                                <Text style={styles.historyText}>{record}</Text>\r\n                            </View>\r\n                        ))}\r\n                    </ScrollView>\r\n                    <View style={styles.buttonContainer}>\r\n                        <TouchableOpacity style={styles.button} onPress={setReminder}>\r\n                            <Text style={styles.buttonText}>Set Reminder</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    <Modal\r\n                        transparent={true}\r\n                        visible={isHeaderModalVisible}\r\n                        onBackdropPress={closeSlideInModal}\r\n                        animationIn=\"slideInLeft\"\r\n                        animationOut=\"slideOutLeft\"\r\n                        onRequestClose={toggleModal}\r\n                    >\r\n                        <View style={styles.modalContainer1}>\r\n                            <Text style={styles.welcomeText}>Welcome</Text>\r\n                            <TouchableOpacity onPress={navigateToDashboard}>\r\n                                <Text style={styles.modalText2}>Dashboard</Text>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity onPress={navigateToHistory}>\r\n                                <Text style={styles.modalText2}>History</Text>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity onPress={navigateToSettings}>\r\n                                <Text style={styles.modalText2}>Settings</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </Modal>\r\n                    <Modal visible={isModalVisible} animationType=\"slide\" transparent={true}>\r\n                        <View style={styles.modalContainer}>\r\n                            <View style={styles.modalContent}>\r\n                                <Text style={styles.modalText3}>Set Reminder Time</Text>\r\n                                <View style={styles.pickerContainer}>\r\n                                    <Picker\r\n                                        selectedValue={reminderTime}\r\n                                        onValueChange={(itemValue) => setReminderTime(itemValue)}\r\n                                        style={styles.picker}\r\n                                    >\r\n                                        <Picker.Item label=\"Select Time\" value=\"\" />\r\n                                        <Picker.Item label=\"12:00 AM\" value=\"0:00\" />\r\n                                        <Picker.Item label=\"1:00 AM\" value=\"1:00\" />\r\n                                        <Picker.Item label=\"2:00 AM\" value=\"2:00\" />\r\n                                        <Picker.Item label=\"3:00 AM\" value=\"3:00\" />\r\n                                        <Picker.Item label=\"4:00 AM\" value=\"4:00\" />\r\n                                        <Picker.Item label=\"5:00 AM\" value=\"5:00\" />\r\n                                        <Picker.Item label=\"6:00 AM\" value=\"6:00\" />\r\n                                        <Picker.Item label=\"7:00 AM\" value=\"7:00\" />\r\n                                        <Picker.Item label=\"8:00 AM\" value=\"8:00\" />\r\n                                        <Picker.Item label=\"9:00 AM\" value=\"9:00\" />\r\n                                        <Picker.Item label=\"10:00 AM\" value=\"10:00\" />\r\n                                        <Picker.Item label=\"11:00 AM\" value=\"11:00\" />\r\n                                        <Picker.Item label=\"12:00 PM\" value=\"12:00\" />\r\n                                        <Picker.Item label=\"1:00 PM\" value=\"13:00\" />\r\n                                        <Picker.Item label=\"2:00 PM\" value=\"14:00\" />\r\n                                        <Picker.Item label=\"3:00 PM\" value=\"15:00\" />\r\n                                        <Picker.Item label=\"4:00 PM\" value=\"16:00\" />\r\n                                        <Picker.Item label=\"5:00 PM\" value=\"17:00\" />\r\n                                        <Picker.Item label=\"6:00 PM\" value=\"18:00\" />\r\n                                        <Picker.Item label=\"7:00 PM\" value=\"19:00\" />\r\n                                        <Picker.Item label=\"8:00 PM\" value=\"20:00\" />\r\n                                        <Picker.Item label=\"9:00 PM\" value=\"21:00\" />\r\n                                        <Picker.Item label=\"10:00 PM\" value=\"22:00\" />\r\n                                        <Picker.Item label=\"11:00 PM\" value=\"23:00\" />\r\n                                    </Picker>\r\n                                </View>\r\n                                <TouchableOpacity style={styles.closeButton} onPress={closeModal}>\r\n                                    <Text style={styles.closeButtonText}>Close</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n                    </Modal>\r\n                </View>\r\n            </ImageBackground>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default DashboardScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    overlay: {\r\n        flex: 1,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.4)',\r\n        resizeMode: 'cover',\r\n    },\r\n    backgroundImage: {\r\n        flex: 1,\r\n        resizeMode: 'cover',\r\n    },\r\n    appContainer: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    headerContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        color: 'white',\r\n        left: -165,\r\n        top: 40,\r\n        marginTop: 20,\r\n        paddingHorizontal: 10,\r\n    },\r\n    header: {\r\n        fontSize: 20,\r\n        marginBottom: 10,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n    },\r\n    meterContainer: {\r\n        height: 300,\r\n        width: 300,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n    },\r\n    meter: {\r\n        width: 200,\r\n        height: 200,\r\n        backgroundColor: 'lightgray',\r\n        borderRadius: 100,\r\n        overflow: 'hidden',\r\n    },\r\n    fill: {\r\n        width: '100%',\r\n        backgroundColor: 'blue',\r\n        position: 'absolute',\r\n        bottom: 0,\r\n    },\r\n    consumedText: {\r\n        fontSize: 18,\r\n        marginTop: 10,\r\n        color: 'white',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n    },\r\n    goalText: {\r\n        fontSize: 16,\r\n        marginTop: 10,\r\n        color: 'white',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n    },\r\n    touchableWaterBottle: {\r\n        width: 40,\r\n        height: 100,\r\n        marginTop: 20,\r\n        alignSelf: 'center',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    messageText: {\r\n        fontSize: 18,\r\n        color: 'green',\r\n        marginTop: 10,\r\n        alignSelf: 'center',\r\n    },\r\n    historyContainer: {\r\n        maxHeight: 200,\r\n        width: 230,\r\n        marginTop: 20,\r\n        borderWidth: 1,\r\n        padding: 20,\r\n        backgroundColor: 'rgba(255, 255, 255, 0.7)',\r\n        borderRadius: 10,\r\n        alignSelf: 'center',\r\n    },\r\n    historyRecord: {\r\n        marginBottom: 10,\r\n        color: 'white',\r\n    },\r\n    historyDate: {\r\n        fontSize: 16,\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        marginBottom: 10,\r\n    },\r\n    historyText: {\r\n        fontSize: 16,\r\n        color: 'white',\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        marginTop: 20,\r\n        alignSelf: 'center',\r\n    },\r\n    button: {\r\n        flex: 1,\r\n        backgroundColor: '#8BADD3',\r\n        padding: 10,\r\n        borderRadius: 5,\r\n        alignItems: 'center', // Center the content horizontally\r\n        justifyContent: 'center', // Center the content vertically\r\n        margin: 5,\r\n    },\r\n\r\n    welcomeText: {\r\n        color: 'white',\r\n        fontSize: 30,\r\n    },\r\n\r\n    modalText2: {\r\n        color: 'white',\r\n        fontSize: 18,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n\r\n    buttonText: {\r\n        color: '#333',\r\n        fontSize: 18,\r\n    },\r\n    modalContainer1: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        alignSelf: 'left',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n    },\r\n    modalText: {\r\n        fontSize: 24,\r\n        color: 'white',\r\n        marginBottom: 20,\r\n    },\r\n    button: {\r\n        backgroundColor: '#8BADD3',\r\n        padding: 10,\r\n        borderRadius: 5,\r\n        margin: 10,\r\n        alignItems: 'center',\r\n        borderRadius: 5,\r\n        alignSelf: 'center',\r\n    },\r\n    buttonText: {\r\n        color: '#333',\r\n        fontSize: 20,\r\n        alignSelf: 'center',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    modalContainer: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 10,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        fontSize: 50,\r\n    },\r\n    modalText3: {\r\n        fontSize: 20,\r\n        color: 'black',\r\n        marginBottom: 20,\r\n        fontWeight: 'bold',\r\n    },\r\n    modalContent: {\r\n        backgroundColor: '#8BADD3',\r\n        padding: 60,\r\n        borderRadius: 10,\r\n        alignItems: 'center',\r\n        fontSize: 50,\r\n    },\r\n    pickerContainer: {\r\n        marginTop: 20,\r\n        borderColor: '#ccc',\r\n        borderRadius: 5,\r\n        borderWidth: 1,\r\n        paddingHorizontal: 10,\r\n        alignSelf: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: 'white', // Set a background color to make options visible\r\n    },\r\n\r\n    picker: {\r\n        height: 40,\r\n        width: '100%',\r\n        fontSize: 16,\r\n        alignSelf: 'center',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    closeButton: {\r\n        marginTop: 20,\r\n    },\r\n    closeButtonText: {\r\n        color: 'red',\r\n        fontSize: 20,\r\n    },\r\n    input: {\r\n        height: 40,\r\n        borderColor: 'gray',\r\n        borderWidth: 1,\r\n        marginBottom: 10,\r\n        paddingHorizontal: 10,\r\n        width: '80%',\r\n    },\r\n    backButton: {\r\n        position: 'absolute',\r\n        top: 10,\r\n        right: 10,\r\n    },\r\n\r\n    backButtonText: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n    },\r\n\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}