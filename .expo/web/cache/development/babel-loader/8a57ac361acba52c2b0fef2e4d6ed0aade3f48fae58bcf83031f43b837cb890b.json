{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport bot from \"../assets/bot.png\";\nimport logodrink from \"../assets/logotrans.png\";\nimport bg from \"../assets/bg.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GoalScreen = function GoalScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var username = route.params.username;\n  console.log(username);\n  var bottles = [{\n    image: bot,\n    label: '1 L'\n  }, {\n    image: bot,\n    label: '1.5 L'\n  }, {\n    image: bot,\n    label: '2 L'\n  }, {\n    image: bot,\n    label: '2.5 L'\n  }, {\n    image: bot,\n    label: '3 L'\n  }, {\n    image: bot,\n    label: 'Custom'\n  }];\n  var chunkArray = function chunkArray(myArray, chunkSize) {\n    var arrayLength = myArray.length;\n    var tempArray = [];\n    for (var index = 0; index < arrayLength; index += chunkSize) {\n      var myChunk = myArray.slice(index, index + chunkSize);\n      tempArray.push(myChunk);\n    }\n    return tempArray;\n  };\n  var bottleGrid = chunkArray(bottles, 3);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ImageBackground, {\n      source: bg,\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.overlay,\n        children: [_jsxs(View, {\n          style: styles.headerContainer,\n          children: [_jsx(View, {\n            style: styles.logoContainer,\n            children: _jsx(Image, {\n              source: logodrink,\n              style: styles.logo\n            })\n          }), _jsx(Text, {\n            style: styles.headerText,\n            children: \"Choose Your Drinking Goal\"\n          })]\n        }), _jsxs(Text, {\n          style: styles.username,\n          children: [\"Hello! Welcome back, \", username, \"!\"]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.addButton,\n          onPress: function onPress() {\n            return navigation.navigate('Personal');\n          },\n          children: [_jsx(Text, {\n            style: styles.addButtonLabel,\n            children: \"Setup your personal water\"\n          }), _jsx(Text, {\n            style: styles.addButtonLabel,\n            children: \"requirement in four steps\"\n          })]\n        }), _jsx(View, {\n          style: styles.bottleGrid,\n          children: bottleGrid.map(function (row, rowIndex) {\n            return _jsx(View, {\n              style: styles.bottleRow,\n              children: row.map(function (bottle, colIndex) {\n                return _jsxs(TouchableOpacity, {\n                  style: styles.bottleContainer,\n                  onPress: function onPress() {\n                    if (bottle.label === 'Custom') {\n                      navigation.navigate('Custom', {\n                        username: username\n                      });\n                    } else {\n                      navigation.navigate('Tabs', {\n                        screen: 'Dashboard',\n                        params: {\n                          username: username,\n                          selectedBottleSize: bottle.label\n                        }\n                      });\n                    }\n                  },\n                  children: [_jsx(Image, {\n                    source: bottle.image,\n                    style: styles.bottle\n                  }), _jsx(Text, {\n                    style: styles.bottleLabel,\n                    children: bottle.label\n                  })]\n                }, colIndex);\n              })\n            }, rowIndex);\n          })\n        })]\n      })\n    })\n  });\n};\nexport default GoalScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  username: {\n    fontSize: 25,\n    marginTop: 20,\n    color: 'red'\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.4)'\n  },\n  headerContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: -200,\n    marginLeft: 20\n  },\n  logoContainer: {\n    marginRight: 10\n  },\n  logo: {\n    height: 140,\n    width: 140\n  },\n  headerText: {\n    fontSize: 30,\n    color: 'white'\n  },\n  inputContainer: {\n    alignItems: 'center',\n    bottom: 40,\n    marginBottom: 30,\n    paddingHorizontal: 50,\n    paddingVertical: 10\n  },\n  addButton: {\n    backgroundColor: '#8BADD3',\n    paddingVertical: 30,\n    paddingHorizontal: 30,\n    borderRadius: 30,\n    bottom: 170,\n    alignItems: 'center'\n  },\n  addButtonLabel: {\n    fontSize: 15,\n    color: '#333'\n  },\n  bottleGrid: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    bottom: 130\n  },\n  bottleRow: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  bottleContainer: {\n    alignItems: 'center'\n  },\n  bottle: {\n    height: 90,\n    width: 90,\n    margin: 20\n  },\n  bottleLabel: {\n    fontSize: 16,\n    color: 'white'\n  }\n});","map":{"version":3,"names":["React","StyleSheet","View","Text","ImageBackground","TouchableOpacity","Image","bot","logodrink","bg","jsx","_jsx","jsxs","_jsxs","GoalScreen","_ref","navigation","route","username","params","console","log","bottles","image","label","chunkArray","myArray","chunkSize","arrayLength","length","tempArray","index","myChunk","slice","push","bottleGrid","style","styles","container","children","source","overlay","headerContainer","logoContainer","logo","headerText","addButton","onPress","navigate","addButtonLabel","map","row","rowIndex","bottleRow","bottle","colIndex","bottleContainer","screen","selectedBottleSize","bottleLabel","create","flex","fontSize","marginTop","color","backgroundColor","flexDirection","alignItems","marginLeft","marginRight","height","width","inputContainer","bottom","marginBottom","paddingHorizontal","paddingVertical","borderRadius","justifyContent","margin"],"sources":["/Users/jio/Desktop/New Water (No data fetch in history)/screens/GoalScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, Text, ImageBackground, TouchableOpacity, Image } from 'react-native';\r\nimport bot from '../assets/bot.png'\r\nimport logodrink from '../assets/logotrans.png'\r\nimport bg from '../assets/bg.png';\r\n\r\nconst GoalScreen = ({ navigation, route }) => {\r\n\r\n    const { username } = route.params;\r\n    console.log(username)\r\n\r\n    // Create an array of bottle images with their corresponding labels\r\n    const bottles = [\r\n        { image: bot, label: '1 L' },\r\n        { image: bot, label: '1.5 L' },\r\n        { image: bot, label: '2 L' },\r\n        { image: bot, label: '2.5 L' },\r\n        { image: bot, label: '3 L' },\r\n        { image: bot, label: 'Custom' },\r\n        // Add more bottles with images and labels as needed\r\n    ];\r\n\r\n    // Helper function to chunk the bottles into a 3x2 grid\r\n    const chunkArray = (myArray, chunkSize) => {\r\n        const arrayLength = myArray.length;\r\n        const tempArray = [];\r\n        for (let index = 0; index < arrayLength; index += chunkSize) {\r\n            const myChunk = myArray.slice(index, index + chunkSize);\r\n            tempArray.push(myChunk);\r\n        }\r\n        return tempArray;\r\n    };\r\n\r\n    const bottleGrid = chunkArray(bottles, 3); // Create a 3x2 grid of bottles\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <ImageBackground\r\n                source={bg}\r\n                style={styles.container}\r\n            >\r\n                <View style={styles.overlay}>\r\n                    <View style={styles.headerContainer}>\r\n                        <View style={styles.logoContainer}>\r\n                            <Image\r\n                                source={logodrink}\r\n                                style={styles.logo}\r\n                            />\r\n                        </View>\r\n                        <Text style={styles.headerText}>Choose Your Drinking Goal</Text>\r\n                    </View>\r\n                    <Text style={styles.username}>Hello! Welcome back, {username}!</Text>\r\n                    <TouchableOpacity\r\n                        style={styles.addButton}\r\n                        onPress={() => navigation.navigate('Personal')}\r\n                    >\r\n                        <Text style={styles.addButtonLabel}>\r\n                            Setup your personal water\r\n                        </Text>\r\n                        <Text style={styles.addButtonLabel}>\r\n                            requirement in four steps\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <View style={styles.bottleGrid}>\r\n                        {bottleGrid.map((row, rowIndex) => (\r\n                            <View key={rowIndex} style={styles.bottleRow}>\r\n                                {row.map((bottle, colIndex) => (\r\n                                    <TouchableOpacity\r\n                                        key={colIndex}\r\n                                        style={styles.bottleContainer}\r\n                                        onPress={() => {\r\n                                            if (bottle.label === 'Custom') {\r\n                                                // Navigate to the CustomGoal screen\r\n                                                navigation.navigate('Custom', { username });\r\n                                            } else {\r\n                                                navigation.navigate('Tabs', {\r\n                                                    screen: 'Dashboard',\r\n                                                    params: {\r\n                                                        username,\r\n                                                        selectedBottleSize: bottle.label,\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <Image source={bottle.image} style={styles.bottle} />\r\n                                        <Text style={styles.bottleLabel}>{bottle.label}</Text>\r\n                                    </TouchableOpacity>\r\n                                ))}\r\n                            </View>\r\n                        ))}\r\n                    </View>\r\n                </View>\r\n            </ImageBackground>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default GoalScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    username: {\r\n        fontSize: 25,\r\n        marginTop: 20,\r\n        color: 'red'\r\n    },\r\n    overlay: {\r\n        flex: 1,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.4)',\r\n    },\r\n    headerContainer: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginTop: -200,\r\n        marginLeft: 20,\r\n    },\r\n    logoContainer: {\r\n        marginRight: 10,\r\n    },\r\n    logo: {\r\n        height: 140,\r\n        width: 140,\r\n    },\r\n    headerText: {\r\n        fontSize: 30,\r\n\r\n        color: 'white',\r\n    },\r\n    inputContainer: {\r\n        alignItems: 'center',\r\n        bottom: 40,\r\n        marginBottom: 30,\r\n        paddingHorizontal: 50,\r\n        paddingVertical: 10,\r\n    },\r\n    addButton: {\r\n        backgroundColor: '#8BADD3',\r\n        paddingVertical: 30,\r\n        paddingHorizontal: 30,\r\n        borderRadius: 30,\r\n        bottom: 170,\r\n        alignItems: 'center',\r\n    },\r\n    addButtonLabel: {\r\n        fontSize: 15,\r\n        color: '#333',\r\n\r\n    },\r\n    bottleGrid: {\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        bottom: 130,\r\n    },\r\n    bottleRow: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    bottleContainer: {\r\n        alignItems: 'center',\r\n    },\r\n    bottle: {\r\n        height: 90,\r\n        width: 90,\r\n        margin: 20,\r\n    },\r\n    bottleLabel: {\r\n        fontSize: 16,\r\n\r\n        color: 'white',\r\n    },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}